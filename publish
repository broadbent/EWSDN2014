#! /usr/bin/env bash

# The ACM SIGCOMM 2012 Website (of which this script is a part of) by 
# ACM SIGCOMM 2012 is licensed under a Creative Commons Attribution-
# NonCommercial-ShareAlike 3.0 Unported License. Source code is
# available at github.com.

# this is where we create the minified temp page
out=$(mktemp -d /tmp/XXXXXXXXXX)
echo Creating minified site in $out...

# for all local files, do...
find . -print0 | while read -d $'\0' item
do
  if [[ $item == ./.git* || $item == ./.DS* || 
  	    $item == ./README.md || $item == ./publish || $item == ./lint ]]; then
	# skip these files
  	continue
  	
  elif [ -d $item ]; then
    # make the directory
    echo mkdir $item
  	mkdir -p $out/$item

  elif [[ $item == ./include/smartypants.php ]]; then
	# just copy this, it breaks when minified
  	echo cp $item
    cp $item $out/$item
  	
  elif [[ $item == *.php || $item == *.htm || $item == *.html ]]; then
	# compress PHP and HTML
	echo htmlcompressor $item
  	htmlcompressor --preserve-php --remove-intertag-spaces --remove-quotes --simple-doctype --remove-style-attr --remove-link-attr --remove-script-attr --remove-form-attr --remove-input-attr --simple-bool-attr --remove-js-protocol  --remove-http-protocol --remove-surrounding-spaces max --compress-js --compress-css --js-compressor closure -t html -o $out/$(dirname $item)/ $item
  	
  elif [[ $item == *.xml ]]; then
	# compress XML
	echo htmlcompressor $item
  	htmlcompressor -t xml -o $out/$(dirname $item)/ $item
  	
  elif [[ $item == *.js ]]; then
	# compress javascript
	echo closure $item
	closure --warning_level QUIET --js_output_file $out/$item $item
	
  elif [[ $item == *.css ]]; then
	# compress CSS
	echo yuicompressor $item
	yuicompressor -o $out/$item $item

  # we do NOT optimize images in this script, it would take too long
  # run your images through image_optim when you add them to the repository
  # https://github.com/toy/image_optim

  else
  	# simply copy all other files
  	echo cp $item
    cp $item $out/$item
  fi
done
echo

# generate a cache manifest
cm=$out/sigcomm.appcache
echo CACHE MANIFEST > $cm
date +'# %F %R' >> $cm
echo >> $cm
echo CACHE: >> $cm
# omit some older pages (various CFx, etc.) from the cache manifest to speed up loading
find . -type f | sed -Ee 's/^\.\///g' | grep -Ev '^\.' | grep -Ev "^include" | grep -Ev "(\.(docx?|pdf|txt|cls|md|DS_Store|htm|xml))|publish|lint|proposals|submission|workshops|^cf" >> $cm
echo >> $cm
echo NETWORK: >> $cm
echo '*' >> $cm
echo >> $cm

# fix permissions locally
chmod -R ug+rwX,o+rX $out

# upload to the ACM's server
#lftp -c "open sftp://lars@turing.acm.org ; mirror -Reva $out 2012 ; cd 2012 ; chmod -R 664 ."
rsync -azv --rsh=ssh --delete $out/ lars@turing.acm.org:~/2012/

# fix permissions remotely
ssh lars@turing.acm.org "chown -R lars:sigcomm 2012/ ; chmod -R ug+rwX,a+rX 2012"

# remove temporary directory
rm -rf $out
